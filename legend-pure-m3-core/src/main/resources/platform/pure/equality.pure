// Copyright 2020 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

Profile meta::pure::profiles::equality
{
    stereotypes: [Key];
}

// Identity (i.e., pointer equality)
native function meta::pure::functions::boolean::is(left:Any[1], right:Any[1]):Boolean[1];

// Identity or primitive equality (e.g., numeric equality)
native function meta::pure::functions::boolean::eq(left:Any[1], right:Any[1]):Boolean[1];

// General equality.  Identity, primitive equality, collection equality, and model-defined equality.
// For model-defined equality, the properties used to define equality should be given the
// meta::pure::profiles::equality.Key stereotype.  Then two instances are equal if all of the
// properties with this stereotype have equal values.
native function meta::pure::functions::boolean::equal(left:Any[*], right:Any[*]):Boolean[1];